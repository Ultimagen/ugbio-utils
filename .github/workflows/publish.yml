name: Ugbio Release

on:
  workflow_dispatch:
    inputs:
      patch-release:
        description: 'Is this a minor release?'
        type: boolean
        required: true
        default: false

env:
  UV_VERSION: '0.4.17'
  MAIN_BRANCH: main
  VERSION_LEVEL: >
    ${{ fromJson('{
      true: "patch",
      false: "minor"
    }')[github.event.inputs.patch-release] }}
  DEV_VERSION_LEVEL: >
    ${{ fromJson('{
      true: "prepatch",
      false: "preminor"
    }')[github.event.inputs.patch-release] }}

permissions:
  id-token: write
  contents: write
jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      publish_commit_sha: ${{ steps.publish-update-version.outputs.commit-sha }}
      new_version: ${{ steps.bump-semver.outputs.new_version }}
      matrix: ${{ steps.list_members.outputs.members }}
    steps:
      - name: Verify branch conditions based on minor-release input
        run: |
          patch_release="${{ inputs.patch-release }}"
          branch_name="${{ github.ref_name }}"
          main_branch="${{ env.MAIN_BRANCH }}"

          if [ "$patch_release" == "false" ] && [ "$branch_name" != "$main_branch" ]; then
            echo "Error: minor-release is set to false, but this action is not running on the main branch."
            exit 1
          fi

          echo "Branch verification passed."

      - uses: actions/checkout@v4

      - name: Build workspaces list
        uses: ./.github/actions/get-members
        id: list_members
        with:
          keep-internal-dockers: false

      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        with:
          semver_only: true
          initial_version: "1.0.0"

      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ env.VERSION_LEVEL }}

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: ${{ env.UV_VERSION }}

      - uses: ./.github/actions/update-workspaces-version
        id: publish-update-version
        with:
           version: ${{ steps.bump-semver.outputs.new_version }}
           ref: ${{ github.ref_name }}
           git-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

      - name: Uv build
        run: |
          uv sync
          uv build --out-dir dist/ --all

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Create a new release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: ${{ steps.bump-semver.outputs.new_version }}
          release_name: Release ${{ steps.bump-semver.outputs.new_version }}
          draft: false
          prerelease: false

  build-dockers:
    needs: [ publish ]
    strategy:
      fail-fast: false
      matrix:
        module: ${{fromJson(needs.publish.outputs.matrix)}}
    uses: ./.github/workflows/build-workspace-docker.yml
    with:
      docker-file: src/${{ matrix.module }}/Dockerfile
      docker-image: ugbio_${{ matrix.module }}
      commit-sha: ${{ needs.publish.outputs.publish_commit_sha }}
      workspace-folder: src/${{ matrix.module }}

  prepare-next-dev-version:
    runs-on: ubuntu-latest
    needs: [ publish, build-dockers ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-dev-semver
        with:
          current_version: ${{ needs.publish.outputs.new_version }}
          level: ${{ env.DEV_VERSION_LEVEL }}

      - uses: ./.github/actions/update-workspaces-version
        with:
          version: ${{ steps.bump-dev-semver.outputs.new_version }}
          ref: ${{ github.ref_name }}
          git-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

      - uses: ./.github/actions/update-devcontainer-jsons
        with:
          version: ${{ needs.publish.outputs.new_version }}
          ref: ${{ github.ref_name }}
          git-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
