name: "Internal - build ugbio workspace docker"
on:
  workflow_call:
    inputs:
      workspace-folder:
        description: "workspace folder (from repository root)"
        type: string
        required: true
      docker-image:
        description: "docker image name"
        type: string
        required: true
      docker-file:
        description: "Dockerfile path (from repository root)"
        required: true
        type: string
      docker-tag:
        description: "Docker image tag, If omitted will use github short sha"
        required: false
        type: string
      docker-context:
        description: "Docker build context"
        required: false
        default: "."
        type: string
      commit-sha:
        description: "commit-sha to run on"
        type: string
        default: ""
        required: false

permissions:
  id-token: write # Required for assuming an AWS role
  contents: read # Required for actions/checkout

env:
  AWS_REGION: us-east-1
  AWS_ROLE_NAME: github-actions-ecr
  AWS_ACCOUNT: 337532070941

jobs:
  pre-build:
    runs-on: ubuntu-latest
    outputs:
      ecr-registry: ${{ steps.ecr-login.outputs.registry }}
      project-version: ${{ steps.extract-version.outputs.project_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit-sha }}
          lfs: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Extract project version
        id: extract-version
        run: |
          pip install toml
          cd ${{ inputs.workspace-folder }}
          if [ -f pyproject.toml ]; then
            version=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
          elif [ -f Cargo.toml ]; then
            version=$(python -c "import toml; print(toml.load('Cargo.toml')['package']['version'])")
          else
            echo "No version file found!"
            exit 1
          fi
          echo "project_version=${version}" >> ${GITHUB_OUTPUT}
          echo "The project version is ${version}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/${{ env.AWS_ROLE_NAME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

  build:
      uses: ./.github/workflows/docker-build-push.yml
      needs: [pre-build]
      secrets: inherit
      with:
         git-repo: ${{ github.repository }}
         git-ref: ${{ inputs.commit-sha || github.ref_name }}
         docker-image: ${{  inputs.docker-image }}
         docker-file: ${{ inputs.docker-file }}
         docker-tag: ${{ inputs.docker-tag }}
         docker-context: ${{ inputs.docker-context }}
         project-version: ${{ needs.pre-build.outputs.project-version }}
         docker-build-args: BASE_IMAGE=${{ needs.pre-build.outputs.ecr-registry }}/ugbio_base:1.7.0
