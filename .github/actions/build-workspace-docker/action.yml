name: "build ugbio workspace docker"
description: "general action to build and push ugbio workspace docker"

inputs:
  workspace-folder:
    description: "workspace folder under src"
    required: true
  docker-repo:
    description: "docker image repository name"
    required: true
  docker-tag:
    description: "Docker image tag, If omitted will use github short sha"
    required: false
  docker-file:
    description: "Dockerfile path"
    required: true
  docker-context:
    description: "Docker build context"
    required: true
    default: "."

runs:
  using: "composite"

  steps:
  - uses: benjlevesque/short-sha@v2.2
    id: short-sha
    with:
      length: 7

  - name: set tag
    id: set-tag
    if: ${{ inputs.image-tag == '' }}
    run: |
      if [ ${{ github.ref_name }} == 'main' ]; then
        echo "imageTag=test_${{ steps.short-sha.outputs.sha }}" >>$GITHUB_OUTPUT;
      else
        echo "imageTag=test_${{ steps.short-sha.outputs.sha }}" >>$GITHUB_OUTPUT;
      fi
    shell: bash

  - name: Configure AWS credentials
    uses: aws-actions/configure-aws-credentials@v3
    with:
      role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/${{ env.AWS_ROLE_NAME }}
      aws-region: ${{ env.AWS_REGION }}

  - name: Login to Amazon ECR
    id: ecr-login
    uses: aws-actions/amazon-ecr-login@v1

  - name: Authenticate to Google Cloud
    id: auth
    uses: google-github-actions/auth@v2
    with:
      token_format: access_token
      workload_identity_provider: ${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      service_account: ${{ env.GCP_SERVICE_ACCOUNT }}

  - name: Login to GCR
    id: gcr-login
    uses: docker/login-action@v2
    with:
      registry: us-central1-docker.pkg.dev
      username: oauth2accesstoken
      password: ${{ steps.auth.outputs.access_token }}


  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v2

  - name: Build and push
    uses: docker/build-push-action@v4
    with:
      context: .
      file: ${{ inputs.docker-file }}
      provenance: false
      push: true
      tags: |
        ${{ steps.ecr-login.outputs.registry }}/${{ inputs.docker-repo }}:${{ inputs.docker-tag || steps.set-tag.outputs.imageTag }}
        us-central1-docker.pkg.dev/ultima-data-307918/ultimagen/${{ inputs.docker-repo }}:${{ inputs.docker-tag || steps.set-tag.outputs.imageTag }}
      cache-from: type=gha
      cache-to: type=gha,mode=max
